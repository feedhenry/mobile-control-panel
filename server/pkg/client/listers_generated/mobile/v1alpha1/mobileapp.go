/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1alpha1

import (
	mobile "github.com/feedhenry/mobile-control-panel/server/pkg/apis/mobile"
	v1alpha1 "github.com/feedhenry/mobile-control-panel/server/pkg/apis/mobile/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MobileAppLister helps list MobileApps.
type MobileAppLister interface {
	// List lists all MobileApps in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MobileApp, err error)
	// MobileApps returns an object that can list and get MobileApps.
	MobileApps(namespace string) MobileAppNamespaceLister
	MobileAppListerExpansion
}

// mobileAppLister implements the MobileAppLister interface.
type mobileAppLister struct {
	indexer cache.Indexer
}

// NewMobileAppLister returns a new MobileAppLister.
func NewMobileAppLister(indexer cache.Indexer) MobileAppLister {
	return &mobileAppLister{indexer: indexer}
}

// List lists all MobileApps in the indexer.
func (s *mobileAppLister) List(selector labels.Selector) (ret []*v1alpha1.MobileApp, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MobileApp))
	})
	return ret, err
}

// MobileApps returns an object that can list and get MobileApps.
func (s *mobileAppLister) MobileApps(namespace string) MobileAppNamespaceLister {
	return mobileAppNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MobileAppNamespaceLister helps list and get MobileApps.
type MobileAppNamespaceLister interface {
	// List lists all MobileApps in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MobileApp, err error)
	// Get retrieves the MobileApp from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MobileApp, error)
	MobileAppNamespaceListerExpansion
}

// mobileAppNamespaceLister implements the MobileAppNamespaceLister
// interface.
type mobileAppNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MobileApps in the indexer for a given namespace.
func (s mobileAppNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MobileApp, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MobileApp))
	})
	return ret, err
}

// Get retrieves the MobileApp from the indexer for a given namespace and name.
func (s mobileAppNamespaceLister) Get(name string) (*v1alpha1.MobileApp, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(mobile.Resource("mobileapp"), name)
	}
	return obj.(*v1alpha1.MobileApp), nil
}
